# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  # VM name "kernel update"
  :"kernel-update" => {
              # VM box
              :box_name => "centos/stream8",
              # VM CPU count
              :cpus => 2,
              # VM RAM size (Mb)
              :memory => 1024,
              # networks
              :net => [],
			  :disks => {
			    :sata1 => {
			      :dfile => './sata1.vdi',
			      :size => 250,
			      :port => 1
			    },
				:sata2 => {
				  :dfile => './sata2.vdi',
				  :size => 250, # Megabytes
				  :port => 2
			    }
			  },
              # forwarded ports
              #:forwarded_port => []
            }
}

Vagrant.configure("2") do |config|
  MACHINES.each do |boxname, boxconfig|
    # Disable shared folders
    # config.vm.synced_folder ".", "/vagrant", disabled: true
    #config.vm.synced_folder ".", "/vagrant", type: "smb"
	# Apply VM config
    config.vm.define boxname do |box|
      # Set VM base box and hostname
      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxname.to_s
      # Additional network config if present
      #if boxconfig.key?(:net)
      #  boxconfig[:net].each do |ipconf|
      #    box.vm.network "private_network", ipconf
      #  end
      #end
      # Port-forward config if present
      #if boxconfig.key?(:forwarded_port)
      #  boxconfig[:forwarded_port].each do |port|
      #    box.vm.network "forwarded_port", port
      #  end
      #end
      # VM resources config
      box.vm.provider "virtualbox" do |v|
        
		
		
		# Display the VirtualBox GUI when booting the machine
        v.gui = true

		
		
		# Set VM RAM size and CPU count
        v.memory = boxconfig[:memory]
        v.cpus = boxconfig[:cpus]
		
		needsController = false
		boxconfig[:disks].each do |dname, dconf|
		  unless File.exist?(dconf[:dfile])
		    v.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
		    needsController =  true
		  end
		end
		if needsController == true
		  v.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
		  boxconfig[:disks].each do |dname, dconf|
		  v.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
		  end
		end
      end
    end
  end
end
